import React, { useState, useEffect } from 'react';
import ReactDOM from 'react-dom/client';
import "../style/lists.css"
import { Link } from 'react-router-dom';
import { PORT } from "../connect/connect";
import { People, Card, Calender,Pin } from "../files/svg";
const Lists = (props) =>{ 
    const[Listo, setListo] = useState([]);
    useEffect(()=>{
        const ListInfa = async () =>{
            try {
                const response = await fetch(`${PORT}/getoList`);
                const data = await response.json();
                setListo(data);
            } catch (error) {
                console.log('Error', error)
            }
        }
        ListInfa();
        
    },[])
    const SwichFun = (selected) =>{
        switch (selected) {
            case "people":
                return <People/>
            case "Card":
                    return <Card/>
            case "Calender":
                return <Calender/>
            case "Pin":
                return <Pin/>
            default:
                break;
        }
    }
    const DeleteButton = async (id)=>{
        const isConfirmed = window.confirm('Are you sure you want to remove this list');

  
        if (!isConfirmed) {
        return;
        }   
        try {
            const response = await fetch(`${PORT}/deleteList/${id}`, {
                method: 'DELETE',
            });

            const responseData = await response.json();
            console.log(responseData);
            window.location.reload();
        } catch (error) {
            console.error('Error deleting list:', error);
        }
    }
    const ArchiveButton = async (id, ArchiveStatus) => {
        try {
            const response = await fetch(`${PORT}/archive/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ archive: !ArchiveStatus }),
            });
    
            const responseData = await response.json();
            console.log(responseData);
    
            // Оновлення інтерфейсу (наприклад, перезавантаження сторінки або оновлення стану, щоб відобразити зміну архіву)
            // Якщо ви використовуєте стан для відображення списків, можете оновити стан тут
        } catch (error) {
            console.error('Error archiving list:', error);
        }
    };

    
    const listo = () =>{
        return(
            <>
                {Listo.map((ListInfa,index) =>{
                    const isOwner = ListInfa.creator === props.username.email;
                    const isMember = ListInfa.members.some(member => member.email === props.username.email);
                    if (isOwner || isMember) {
                        return(

                            <div className='ListOfLists' key={index}>
                            <div className='ListoBar'>
                                <div  className='IconBlock'>
                                    {SwichFun(ListInfa.selectedOption)}

                                </div>
                                <div className='InfoBlock'>
                                    <Link to={`/list/${ListInfa._id}`} className='titleList'>{ListInfa.listname}</Link>
                                    <div className='roleList'>{ListInfa.creator === props.username.email ? 'Admin' : 'Member'}</div>
                                </div>
                                <div className='ButtonBlock'onClick={() => ArchiveButton(ListInfa._id, ListInfa.archive)}>
                                    <div className='ArchiveButton'>
                                        <svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M0 3.75C0 3.25272 0.197544 2.77581 0.549175 2.42417C0.900806 2.07254 1.37772 1.875 1.875 1.875H28.125C28.6223 1.875 29.0992 2.07254 29.4508 2.42417C29.8025 2.77581 30 3.25272 30 3.75V7.5C30 7.99728 29.8025 8.47419 29.4508 8.82582C29.0992 9.17746 28.6223 9.375 28.125 9.375V23.4375C28.125 24.6807 27.6311 25.873 26.7521 26.7521C25.873 27.6311 24.6807 28.125 23.4375 28.125H6.5625C5.3193 28.125 4.12701 27.6311 3.24794 26.7521C2.36886 25.873 1.875 24.6807 1.875 23.4375V9.375C1.37772 9.375 0.900806 9.17746 0.549175 8.82582C0.197544 8.47419 0 7.99728 0 7.5V3.75ZM3.75 9.375V23.4375C3.75 24.1834 4.04632 24.8988 4.57376 25.4262C5.10121 25.9537 5.81658 26.25 6.5625 26.25H23.4375C24.1834 26.25 24.8988 25.9537 25.4262 25.4262C25.9537 24.8988 26.25 24.1834 26.25 23.4375V9.375H3.75ZM28.125 3.75H1.875V7.5H28.125V3.75ZM9.375 14.0625C9.375 13.8139 9.47377 13.5754 9.64959 13.3996C9.8254 13.2238 10.0639 13.125 10.3125 13.125H19.6875C19.9361 13.125 20.1746 13.2238 20.3504 13.3996C20.5262 13.5754 20.625 13.8139 20.625 14.0625C20.625 14.3111 20.5262 14.5496 20.3504 14.7254C20.1746 14.9012 19.9361 15 19.6875 15H10.3125C10.0639 15 9.8254 14.9012 9.64959 14.7254C9.47377 14.5496 9.375 14.3111 9.375 14.0625Z"/>
                                        </svg>
                                    </div>
                                    <div className='EditButton'>
                                        <svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M29.0663 3.63751C29.2414 3.81324 29.3398 4.05125 29.3398 4.29938C29.3398 4.54751 29.2414 4.78552 29.0663 4.96125L27.1106 6.91876L23.3606 3.16876L25.3163 1.21125C25.4921 1.0355 25.7305 0.936768 25.9791 0.936768C26.2277 0.936768 26.4661 1.0355 26.6419 1.21125L29.0663 3.63563V3.63751ZM25.785 8.2425L22.035 4.4925L9.26064 17.2688C9.15745 17.3719 9.07976 17.4978 9.03377 17.6363L7.52439 22.1625C7.49702 22.245 7.49313 22.3335 7.51317 22.4181C7.5332 22.5027 7.57637 22.5801 7.63784 22.6416C7.69932 22.703 7.77668 22.7462 7.86128 22.7662C7.94587 22.7863 8.03438 22.7824 8.11689 22.755L12.6431 21.2456C12.7814 21.2002 12.9073 21.1231 13.0106 21.0206L25.785 8.2425Z"/>
                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M1.875 25.3125C1.875 26.0584 2.17132 26.7738 2.69876 27.3012C3.22621 27.8287 3.94158 28.125 4.6875 28.125H25.3125C26.0584 28.125 26.7738 27.8287 27.3012 27.3012C27.8287 26.7738 28.125 26.0584 28.125 25.3125V14.0625C28.125 13.8139 28.0262 13.5754 27.8504 13.3996C27.6746 13.2238 27.4361 13.125 27.1875 13.125C26.9389 13.125 26.7004 13.2238 26.5246 13.3996C26.3488 13.5754 26.25 13.8139 26.25 14.0625V25.3125C26.25 25.5611 26.1512 25.7996 25.9754 25.9754C25.7996 26.1512 25.5611 26.25 25.3125 26.25H4.6875C4.43886 26.25 4.2004 26.1512 4.02459 25.9754C3.84877 25.7996 3.75 25.5611 3.75 25.3125V4.6875C3.75 4.43886 3.84877 4.2004 4.02459 4.02459C4.2004 3.84877 4.43886 3.75 4.6875 3.75H16.875C17.1236 3.75 17.3621 3.65123 17.5379 3.47541C17.7137 3.2996 17.8125 3.06114 17.8125 2.8125C17.8125 2.56386 17.7137 2.3254 17.5379 2.14959C17.3621 1.97377 17.1236 1.875 16.875 1.875H4.6875C3.94158 1.875 3.22621 2.17132 2.69876 2.69876C2.17132 3.22621 1.875 3.94158 1.875 4.6875V25.3125Z"/>
                                        </svg>
                                    </div>
                                    <div className='DeleteButton'  onClick={()=>DeleteButton(ListInfa._id)}>
                                        <svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M7.5 18.75C7.5 18.2527 7.69754 17.7758 8.04918 17.4242C8.40081 17.0725 8.87772 16.875 9.375 16.875C9.87228 16.875 10.3492 17.0725 10.7008 17.4242C11.0525 17.7758 11.25 18.2527 11.25 18.75V22.5C11.25 22.9973 11.0525 23.4742 10.7008 23.8258C10.3492 24.1775 9.87228 24.375 9.375 24.375C8.87772 24.375 8.40081 24.1775 8.04918 23.8258C7.69754 23.4742 7.5 22.9973 7.5 22.5V18.75ZM13.125 18.75C13.125 18.2527 13.3225 17.7758 13.6742 17.4242C14.0258 17.0725 14.5027 16.875 15 16.875C15.4973 16.875 15.9742 17.0725 16.3258 17.4242C16.6775 17.7758 16.875 18.2527 16.875 18.75V22.5C16.875 22.9973 16.6775 23.4742 16.3258 23.8258C15.9742 24.1775 15.4973 24.375 15 24.375C14.5027 24.375 14.0258 24.1775 13.6742 23.8258C13.3225 23.4742 13.125 22.9973 13.125 22.5V18.75ZM18.75 18.75C18.75 18.2527 18.9475 17.7758 19.2992 17.4242C19.6508 17.0725 20.1277 16.875 20.625 16.875C21.1223 16.875 21.5992 17.0725 21.9508 17.4242C22.3025 17.7758 22.5 18.2527 22.5 18.75V22.5C22.5 22.9973 22.3025 23.4742 21.9508 23.8258C21.5992 24.1775 21.1223 24.375 20.625 24.375C20.1277 24.375 19.6508 24.1775 19.2992 23.8258C18.9475 23.4742 18.75 22.9973 18.75 22.5V18.75Z"/>
                                        <path d="M10.7944 2.00811C10.9 2.07138 10.9922 2.15484 11.0656 2.25372C11.1389 2.35261 11.1921 2.46498 11.2221 2.58443C11.252 2.70387 11.2582 2.82805 11.2401 2.94986C11.2221 3.07167 11.1802 3.18874 11.1169 3.29436L6.34312 11.25H23.6569L18.8812 3.29436C18.7534 3.08103 18.7156 2.82566 18.7761 2.58445C18.8366 2.34323 18.9904 2.13591 19.2037 2.00811C19.4171 1.88031 19.6724 1.84249 19.9137 1.90297C20.1549 1.96345 20.3622 2.11728 20.49 2.33061L25.8431 11.25H29.0625C29.3111 11.25 29.5496 11.3488 29.7254 11.5246C29.9012 11.7004 30 11.9388 30 12.1875V14.0625C30 14.3111 29.9012 14.5496 29.7254 14.7254C29.5496 14.9012 29.3111 15 29.0625 15H27.8944L24.4369 27.105C24.3529 27.3991 24.1752 27.6578 23.9309 27.8419C23.6867 28.0259 23.389 28.1253 23.0831 28.125H6.91875C6.61287 28.1253 6.31522 28.0259 6.07093 27.8419C5.82663 27.6578 5.64901 27.3991 5.565 27.105L2.10563 15H0.9375C0.68886 15 0.450403 14.9012 0.274587 14.7254C0.0987721 14.5496 0 14.3111 0 14.0625V12.1875C0 11.9388 0.0987721 11.7004 0.274587 11.5246C0.450403 11.3488 0.68886 11.25 0.9375 11.25H4.15688L9.50625 2.33061C9.56952 2.22496 9.65297 2.13281 9.75186 2.05943C9.85075 1.98604 9.96312 1.93285 10.0826 1.9029C10.202 1.87295 10.3262 1.86683 10.448 1.88488C10.5698 1.90294 10.6887 1.94481 10.7944 2.00811ZM4.05562 15L7.26938 26.25H22.7306L25.9444 15H4.05562Z"/>
                                        </svg>

                                    </div>
                                </div>
                            </div>
                            </div>
                        );}
                        else {
                            // Якщо користувач не є власником або учасником, не відображати список
                            return null;
                          }
                    }
                    
                    
                        
                    
                )}
            </>
            
        )
    }
    return(
        <div className='ListsBlock'>
                        <div className='ListTitleCreate'>
                            <div className='Title'>Seznam Listu</div>
                            <Link className='CreateListBlock'  to = {props.create}>Vytvorit novy seznam
                                <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M15 3.75C15.2486 3.75 15.4871 3.84877 15.6629 4.02459C15.8387 4.2004 15.9375 4.43886 15.9375 4.6875V14.0625H25.3125C25.5611 14.0625 25.7996 14.1613 25.9754 14.3371C26.1512 14.5129 26.25 14.7514 26.25 15C26.25 15.2486 26.1512 15.4871 25.9754 15.6629C25.7996 15.8387 25.5611 15.9375 25.3125 15.9375H15.9375V25.3125C15.9375 25.5611 15.8387 25.7996 15.6629 25.9754C15.4871 26.1512 15.2486 26.25 15 26.25C14.7514 26.25 14.5129 26.1512 14.3371 25.9754C14.1613 25.7996 14.0625 25.5611 14.0625 25.3125V15.9375H4.6875C4.43886 15.9375 4.2004 15.8387 4.02459 15.6629C3.84877 15.4871 3.75 15.2486 3.75 15C3.75 14.7514 3.84877 14.5129 4.02459 14.3371C4.2004 14.1613 4.43886 14.0625 4.6875 14.0625H14.0625V4.6875C14.0625 4.43886 14.1613 4.2004 14.3371 4.02459C14.5129 3.84877 14.7514 3.75 15 3.75Z" fill="white"/>
                                </svg>

                            </Link>
                        </div>
            {listo()}
        </div>
    )
}
export default Lists